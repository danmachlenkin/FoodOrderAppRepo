{"ast":null,"code":"var _jsxFileName = \"/Users/danmachlenkin/Desktop/Dan/Web Development/TEST/Food Order App/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react'; //CSS imports\n\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = input => input.trim() === '';\n\nconst isFiveChars = postalCode => postalCode.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formValidity, setFormValidity] = useState({\n    name: true,\n    street: true,\n    postalCode: true,\n    city: true\n  });\n  const nameRef = useRef();\n  const streetRef = useRef();\n  const postalCodeRef = useRef();\n  const cityRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameRef.current.value;\n    const enteredStreet = streetRef.current.value;\n    const enteredPostalCode = postalCodeRef.current.value;\n    const enteredCity = cityRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    setFormValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postalCode: enteredPostalCodeIsValid,\n      city: enteredCityIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      postalCode: enteredPostalCode,\n      city: enteredCity\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formValidity.street ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formValidity.city ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formValidity.postalCode ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), !formValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !formValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), !formValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a correct postal code! (5 characters)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), !formValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"mc93rzB/tEKaTYcMiQz2hDDqGZE=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useRef","useState","classes","isEmpty","input","trim","isFiveChars","postalCode","length","Checkout","props","formValidity","setFormValidity","name","street","city","nameRef","streetRef","postalCodeRef","cityRef","confirmHandler","event","preventDefault","enteredName","current","value","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalCodeControlClasses","form","actions","onCancle","submit"],"sources":["/Users/danmachlenkin/Desktop/Dan/Web Development/TEST/Food Order App/src/components/Cart/Checkout.js"],"sourcesContent":["import React , {useRef, useState} from 'react';\n\n//CSS imports\nimport classes from './Checkout.module.css';\n\n\nconst isEmpty = input => input.trim() === '';\nconst isFiveChars = postalCode => postalCode.trim().length === 5;\n\nconst Checkout = (props) => {\n    const [formValidity , setFormValidity] = useState({\n      name: true,\n      street: true,\n      postalCode: true,\n      city: true,\n    })\n\n    const nameRef = useRef();\n    const streetRef = useRef();\n    const postalCodeRef = useRef();\n    const cityRef = useRef();\n\n\n\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n    const enteredName = nameRef.current.value;\n    const enteredStreet = streetRef.current.value;\n    const enteredPostalCode = postalCodeRef.current.value;\n    const enteredCity = cityRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n\n    setFormValidity({\n      name:enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postalCode: enteredPostalCodeIsValid,\n      city: enteredCityIsValid,\n    })\n\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if(!formIsValid){\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      postalCode: enteredPostalCode,\n      city: enteredCity\n    })\n  };\n\n  const nameControlClasses = `${classes.control} ${formValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formValidity.street ? '' : classes.invalid}`\n  const cityControlClasses = `${classes.control} ${formValidity.city ? '' : classes.invalid}`\n  const postalCodeControlClasses = `${classes.control} ${formValidity.postalCode ? '' : classes.invalid}`\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameRef}/>\n        {!formValidity.name && <p>Please enter a name!</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetRef}/>\n        {!formValidity.street && <p>Please enter a street!</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalCodeRef}/>\n        {!formValidity.postalCode && <p>Please enter a correct postal code! (5 characters)</p>}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityRef}/>\n        {!formValidity.city && <p>Please enter a city!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancle}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module"}