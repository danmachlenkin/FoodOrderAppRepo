{"ast":null,"code":"var _jsxFileName = \"/Users/danmachlenkin/Desktop/Dan/Web Development/TEST/Food Order App/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.tpye === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    debugger;\n    const existingCartItemIndex = state.items.findIndex(item => console.log(item));\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      let updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      tpye: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      tpye: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"xNoVBhzo/FaQK+pVUAMBgGK+qwI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultState","items","totalAmount","cartReducer","state","action","tpye","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","console","log","existingCartItem","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"sources":["/Users/danmachlenkin/Desktop/Dan/Web Development/TEST/Food Order App/src/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.tpye === \"ADD\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n        debugger;\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => console.log(item)\n    );\n\n    const existingCartItem = state.items[existingCartItemIndex];\n    \n    let updatedItems;\n\n    if(existingCartItem){\n        let updatedItem = {\n            ...existingCartItem,\n            amount: existingCartItem.amount + action.item.amount\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n\n    }else{\n         updatedItems = state.items.concat(action.item);\n\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultState);\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ tpye: \"ADD\", item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ tpye: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,WAAW,EAAE;AAFM,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,MAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADtD;IAEI;IACJ,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC3BJ,IAAD,IAAUK,OAAO,CAACC,GAAR,CAAYN,IAAZ,CADkB,CAA9B;IAIA,MAAMO,gBAAgB,GAAGX,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;IAEA,IAAIK,YAAJ;;IAEA,IAAGD,gBAAH,EAAoB;MAChB,IAAIE,WAAW,GAAG,EACd,GAAGF,gBADW;QAEdL,MAAM,EAAEK,gBAAgB,CAACL,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;MAFhC,CAAlB;MAIAM,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAACH,KAAV,CAAf;MACAe,YAAY,CAACL,qBAAD,CAAZ,GAAsCM,WAAtC;IAEH,CARD,MAQK;MACAD,YAAY,GAAGZ,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAmBb,MAAM,CAACG,IAA1B,CAAf;IAEJ;;IAED,OAAO;MACLP,KAAK,EAAEe,YADF;MAELd,WAAW,EAAEK;IAFR,CAAP;EAID;;EACD,OAAOP,YAAP;AACD,CAhCD;;AAkCA,MAAMmB,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAACK,WAAD,EAAcH,YAAd,CAAlD;;EAEA,MAAMuB,oBAAoB,GAAIf,IAAD,IAAU;IACrCc,kBAAkB,CAAC;MAAEhB,IAAI,EAAE,KAAR;MAAeE,IAAI,EAAEA;IAArB,CAAD,CAAlB;EACD,CAFD;;EAIA,MAAMgB,yBAAyB,GAAIC,EAAD,IAAQ;IACxCH,kBAAkB,CAAC;MAAEhB,IAAI,EAAE,QAAR;MAAkBmB,EAAE,EAAEA;IAAtB,CAAD,CAAlB;EACD,CAFD;;EAIA,MAAMC,WAAW,GAAG;IAClBzB,KAAK,EAAEoB,SAAS,CAACpB,KADC;IAElBC,WAAW,EAAEmB,SAAS,CAACnB,WAFL;IAGlByB,OAAO,EAAEJ,oBAHS;IAIlBK,UAAU,EAAEJ;EAJM,CAApB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEE,WAA7B;IAAA,UACGN,KAAK,CAACS;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAvBD;;GAAMV,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}